name: CICD

on:
  push:
    branches: [ main ]

  workflow_dispatch:

env:
  # Required for Postgres
  POSTGRESQL_VERSION: 14.1
  POSTGRESQL_DB: eokonkwo
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: password
  # Required for Java
  JAVA_VERSION: 1.15
  # Required for Docker
  DOCKER_HUB_USERNAME: eokonkwo
  # Required for AWS & Elastic Beanstalk
  AWS_REGION: us-east-1
  EB_ENVIRONMENT_NAME: Studentmanagementappfullstack-env
  EB_APPLICATION_NAME: StudentManagementApp-Fullstack
  EB_DEPLOYMENT_PACKAGE: elasticbeanstalk/docker-compose.yml

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      # Sending a message to slack
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'CICD is now taking place... :eyes:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Using an already-made github checkout actions tag
      - uses: actions/checkout@v2

      # Setting up the Java JDK for compiling the code
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}

      # Setup the build number for the process
      - name: Build Number
        id: build-number
        run: echo "::set-output name=BUILD_NUMBER::$(date '+%-d.%-m.%Y.%-H.%-M.%-S')"

      # Login to my docker account
      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # Use Maven to clean package and then deploy it to dockerhub
      - name: Maven Clean Package and Push to Dockerhub
        run: |
          ./mvnw --no-transfer-progress clean package -P build-frontend \
          -P jib-push-to-dockerhub -Dapp.image.tag=${{ steps.build-number.outputs.BUILD_NUMBER }}

      # Sending a message to slack
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':crossed_fingers: pushed eokonkwo/springboot-react-fullstack:${{steps.build_number.outputs.BUILD_NUMBER}} to DockerHub... '
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


      - name: Update & commit the version of the app in docker-compose.yml
        run: |
          BUILD_NUMBER=${{steps.build-number.outputs.BUILD_NUMBER}}
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          sed -i -E 's_(eokonkwo/springboot-react-fullstack:)([^"]*)_\1'${BUILD_NUMBER}'_' elasticbeanstalk/docker-compose.yml
          echo -e "Current elasticbeanstalk/docker-compose.yml\n$(cat elasticbeanstalk/docker-compose.yml)"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add elasticbeanstalk/docker-compose.yml
          git commit -m "The new version of the app: ${BUILD_NUMBER}"
          git push

      # Sending a message to slack
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: ':white_check_mark: The Deployment has started... :100:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Deploying the application to AWS Elastic Beanstalk
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@ebe3476a4ce991d54336935e75e78dd9d86f9408
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: Version ${{steps.build-number.outputs.BUILD_NUMBER}} has been deployed through github actions ${{github.sha}}
          wait_for_deployment: 60

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Success!! Deployment to http://studentmanagementappfullstack-env.eba-6ayfszt3.us-east-1.elasticbeanstalk.com is done. :tada:'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()